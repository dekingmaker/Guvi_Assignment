//1) Pirnt Odd numbers in the array

anonymous  : 

 function oddoreven(array){
    for(var i=0;i<array.length;i++){
        if(array[i]%2!=0){
            console.log(array[i]);
        }
    }
}

oddoreven([1,2,3,4,5]);

IIFE :

( function(array){
    for(var i=0;i<array.length;i++){
        if(array[i]%2!=0){
            console.log(array[i]);
        }
    }
})([1,2,3,4,5]);

Arrow Function:

var oddoreven= (array)=>{
     for(var i=0;i<array.length;i++){
        if(array[i]%2!=0){
            console.log(array[i]);
        }
    }
}

oddoreven([1,2,3,4,5]);

 2)Convert all the strings to title caps in a string array
anonymous  : 

function capletters(str){
    let split1= str.split(' ');
   for(var i=0;i<split1.length;i++){
    split1[i]=split1[i].charAt(0).toUpperCase()+split1[i].slice(1);
   }
   split1.join(' ');
   console.log(split1);
}

IIFE :

(function(str){
    let split1= str.split(' ');
   for(var i=0;i<split1.length;i++){
    split1[i]=split1[i].charAt(0).toUpperCase()+split1[i].slice(1);
   }
   split1.join(' ');
   console.log(split1);
})('hello how are you');

Arrow Function:

let capletters=(str)=>{
    let split1= str.split(' ');
   for(var i=0;i<split1.length;i++){
    split1[i]=split1[i].charAt(0).toUpperCase()+split1[i].slice(1);
   }
   split1.join(' ');
   console.log(split1);
}
capletters('hello how are you');

3)Sum of all numbers in an array

anonymous  : 

function sum(arr){
    let temp=0;
    for(var i=0;i<arr.length;i++){
        temp+=arr[i];
    }
    console.log(temp);
}
sum([1,2,3,4,5]);

IIFE :

(function(arr){
    let temp=0;
    for(var i=0;i<arr.length;i++){
        temp+=arr[i];
    }
    console.log(temp);
})([1,2,3,4,5]);

arrow function:

sum=(arr)=>{
    let temp=0;
    for(var i=0;i<arr.length;i++){
        temp+=arr[i];
    }
    console.log(temp);
}
sum([1,2,3,4,5]);

4) Return all the prime numbers in an array

anonymous  : 

function prime(arr){
    arr=arr.filter((number)=>{
        for(var i=2;i<arr.length/2;i++){
            if(number%i==0) return false;
        }
        return true;
    });
    console.log(arr);
}
prime([1,2,3,4,5,6]);

IIFE :

(function(arr){
    arr=arr.filter((number)=>{
        for(var i=2;i<arr.length/2;i++){
            if(number%i==0) return false;
        }
        return true;
    });
    console.log(arr);
})([1,2,3,4,5,6]);

arrow function:

prime=(arr)=>{
    arr=arr.filter((number)=>{
        for(var i=2;i<arr.length/2;i++){
            if(number%i==0) return false;
        }
        return true;
    });
    console.log(arr);
}
prime([1,2,3,4,5,6]);

Return all the palindromes in an array


anonymous  : 

function ispalindrome(strr) {
    for (let i = 0; i < strr.length; i++) {
        if (strr[i] !== strr[strr.length - i - 1]) {
            return false;
        }
    }
    return true;
}

function palindrome(str) {
    for (let i = 0; i < str.length; i++) {
        let ans = ispalindrome(str[i]);
        if (ans === true) {
            console.log(str[i]);
        }
    }
}

palindrome(['aba','aaabaaa']);


IIFE:

(function(str){
for (let i = 0; i < str.length; i++) {
        let ans = ispalindrome(str[i]);
        if (ans === true) {
            console.log(str[i]);
        }
    }

})(['aba','aaabaaa']);

Arrow Function:

palindrome=(str)=>{
 for (let i = 0; i < str.length; i++) {
        let ans = ispalindrome(str[i]);
        if (ans === true) {
            console.log(str[i]);
        }
    }
}

palindrome(['aba','aaabaaa']);


6)Return median of two sorted arrays of the same size.



function findMedianSortedArrays(nums1, nums2) {
  // Combine the two sorted arrays
  const combined = [...nums1, ...nums2].sort((a, b) => a - b);
  const length = combined.length;
  const mid = Math.floor(length / 2);

  if (length % 2 === 1) {
    // Odd length, return middle value
    return combined[mid];
  } else {
    // Even length, return average of two middle values
    return (combined[mid] + combined[mid - 1]) / 2;
  }

7)Remove duplicates from an array

const array = [1, 2, 3, 2, 4, 1, 5];
const uniqueArray = [];
for (let element of array) {
  if (!uniqueArray.includes(element)) {
    uniqueArray.push(element);
  }
}
console.log(uniqueArray);

8) Rotate the array buy K Times:

function rotateArray(array, k) {
  const n = array.length;
  const rotations = k % n; // Calculate effective rotations if k > n

  // Rotate the array using splice
  array.splice(0, 0, ...array.splice(n - rotations, rotations));

  return array;
}

